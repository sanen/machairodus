<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.machairodus.mappers.mapper.manager.ConfigureNodeMapper">
	<select id="find" resultType="org.machairodus.mappers.domain.NodeConfig" parameterType="java.util.Map">
		select t1.id, t1.server_id as serverId, t2.name as serverName, t1.name, t1.port, t1.jmx_port as jmxPort, 
		t1.type, t1.weight, t1.startup, t1.pid, t1.create_time as createTime, t1.create_user_id as createUserId, 
		t3.username as createUserName, t1.modify_time as modifyTime, t1.modify_user_id as modifyUserId, t4.username as modifyUserName 
		from t_scd_node_config t1 left join t_scd_server_config t2 on t1.server_id = t2.id
		left join t_scd_user t3 on t1.create_user_id = t3.id
		left join t_scd_user t4 on t1.modify_user_id = t4.id
		where 1 = 1
		<if test="server != null"> and t1.server_id in
			<foreach collection="server" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="node != null"> and 
			<foreach collection="node" item="item" open="(" close=")" separator=" or ">
				t1.name like #{item}
			</foreach>
		</if>
		<if test="type != null"> and t1.type in
			<foreach collection="type" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="sort != null"> order by ${sort} ${order}</if>
		<if test="limit != null">limit <if test="offset != null">#{offset}, </if> #{limit}</if>
	</select>
	
	<select id="findTotal" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(1) from t_scd_node_config t1 left join t_scd_server_config t2 on t1.server_id = t2.id
		where 1 = 1
		<if test="server != null"> and t1.server_id in
			<foreach collection="server" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="node != null"> and 
			<foreach collection="node" item="item" open="(" close=")" separator=" or ">
				t1.name like #{item}
			</foreach>
		</if>
		<if test="type != null"> and t1.type in
			<foreach collection="type" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</select>
	
	<select id="findById" resultType="org.machairodus.mappers.domain.NodeConfig" parameterType="java.lang.Long">
		select t1.id, t1.server_id as serverId, t2.name as serverName, t2.address as serverAddress, t1.name, t1.port, t1.jmx_port as jmxPort, 
		t1.type, t1.weight, t1.startup, t1.pid, t1.create_time as createTime, t1.create_user_id as createUserId, 
		t3.username as createUserName, t1.modify_time as modifyTime, t1.modify_user_id as modifyUserId, t4.username as modifyUserName 
		from t_scd_node_config t1 left join t_scd_server_config t2 on t1.server_id = t2.id
		left join t_scd_user t3 on t1.create_user_id = t3.id
		left join t_scd_user t4 on t1.modify_user_id = t4.id
		where t1.id = #{id}
	</select>
	
	<select id="findExistsById" resultType="java.lang.Long" parameterType="java.lang.Long">
		select count(1) from t_scd_node_config where id = #{id}
	</select>
	
	<insert id="insert" parameterType="org.machairodus.mappers.domain.NodeConfig" useGeneratedKeys="true" keyProperty="id">
		insert into t_scd_node_config(server_id, name, port, jmx_port, type, weight, create_time, create_user_id, modify_time, modify_user_id)
		values(#{serverId}, #{name}, #{port}, #{jmxPort}, #{type}, #{weight}, #{createTime}, #{createUserId}, #{modifyTime}, #{modifyUserId})
	</insert>
	
	<update id="update" parameterType="org.machairodus.mappers.domain.NodeConfig">
		update t_scd_node_config set server_id = #{serverId}, name = #{name}, port = #{port}, 
		jmx_port = #{jmxPort}, type = #{type}, weight = #{weight}, modify_time = #{modifyTime}, modify_user_id = #{modifyUserId}
		where id = #{id}
	</update>
	
	<update id="updateStatus" parameterType="java.util.Map">
		update t_scd_node_config set startup = #{startup}, pid = #{pid} where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		delete from t_scd_node_config where id = #{id}
	</delete>
	
	<select id="findSimple" resultType="org.machairodus.mappers.domain.NodeConfig" parameterType="java.util.Map">
		select t1.id, t1.name, t1.port, t1.jmx_port as jmxPort, t2.name as serverName, t2.address as serverAddress, t1.type from t_scd_node_config t1 
		left join t_scd_server_config t2 on t1.server_id = t2.id where 
		<if test="type == null">t1.type = 3</if>
		<if test="type != null">t1.type in
			<foreach collection="type" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="param != null and param != ''">
			and (t1.name like '%${param}%' or t2.name like '%${param}%' or t2.address like '%${param}%')
		</if>
		order by t1.name asc
		<if test="limit != null">limit <if test="offset != null">#{offset}, </if> #{limit}</if>
	</select>
	
	<select id="findSimpleTotal" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(1) from t_scd_node_config t1 
		left join t_scd_server_config t2 on t1.server_id = t2.id where 
		<if test="type == null">t1.type = 3</if>
		<if test="type != null">t1.type = #{type}</if>
		<if test="param != null and param != ''">
			and (t1.name like '%${param}%' or t2.name like '%${param}%' or t2.address like '%${param}%')
		</if>
	</select>
	
	<select id="findUnAssign" resultType="org.machairodus.mappers.domain.NodeConfig" parameterType="java.util.Map">
		select t1.id, t1.name, t1.port, t1.jmx_port as jmxPort, t2.name as serverName, t2.address as serverAddress from t_scd_node_config t1 
		left join t_scd_server_config t2 on t1.server_id = t2.id
		where t1.type = 3 and t1.id not in (select node_id from t_scd_scheduler_info where scheduler_id = #{schedulerId})
	</select>
	
	<select id="findAssign" resultType="org.machairodus.mappers.domain.NodeConfig" parameterType="java.util.Map">
		select t1.id, t1.name, t1.port, t1.jmx_port as jmxPort, t2.name as serverName, t2.address as serverAddress from t_scd_node_config t1 
		left join t_scd_server_config t2 on t1.server_id = t2.id
		where t1.type = 3 and t1.id in (select node_id from t_scd_scheduler_info where scheduler_id = #{schedulerId})
	</select>
	
	<select id="findByType" resultType="org.machairodus.mappers.domain.NodeConfig" parameterType="java.util.Map">
		select t1.id, t1.server_id as serverId, t2.name as serverName, t2.address as serverAddress, t1.name, t1.port, t1.jmx_port as jmxPort, 
		t1.type, t1.weight, t1.startup, t1.pid
		from t_scd_node_config t1 left join t_scd_server_config t2 on t1.server_id = t2.id
		where 1 = 1
		<if test="type != null">
			and t1.type = #{type}
		</if>
	</select>
</mapper>