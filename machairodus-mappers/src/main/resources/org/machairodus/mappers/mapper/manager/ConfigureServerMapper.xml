<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.machairodus.mappers.mapper.manager.ConfigureServerMapper">
	<select id="find" resultType="org.machairodus.mappers.domain.ServerConfig" parameterType="java.util.Map">
		select t1.id, t1.name, t1.address, t1.username, t1.create_time as createTime, 
		t1.create_user_id as createUserId, t1.modify_time as modifyTime, t1.modify_user_id as modifyUserId, 
		t2.username as createUserName, t3.username as modifyUserName, '******' as passwd
		from t_scd_server_config t1 left join t_scd_user t2 on t1.create_user_id = t2.id
		left join t_scd_user t3 on t1.modify_user_id = t3.id
		where 1 = 1
		<if test="name != null"> and 
			<foreach collection="name" item="item" open="(" close=")" separator=" or ">
				name like #{item}
			</foreach>
		</if>
		<if test="address != null"> and 
			<foreach collection="address" item="item" open="(" close=")" separator=" or ">
				address like #{item}
			</foreach>
		</if>
		<if test="sort != null"> order by ${sort} ${order}</if>
		<if test="limit != null">limit <if test="offset != null">#{offset}, </if> #{limit}</if>
	</select>
	
	<select id="findTotal" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(1) from t_scd_server_config t1 where 1 = 1
		<if test="name != null"> and 
			<foreach collection="name" item="item" open="(" close=")" separator=" or ">
				name like #{item}
			</foreach>
		</if>
		<if test="address != null"> and 
			<foreach collection="address" item="item" open="(" close=")" separator=" or ">
				address like #{item}
			</foreach>
		</if>
	</select>
	
	<select id="findById" resultType="org.machairodus.mappers.domain.ServerConfig" parameterType="java.lang.Long">
		select t1.id, t1.name, t1.address, t1.username, t1.create_time as createTime, 
		t1.create_user_id as createUserId, t1.modify_time as modifyTime, t1.modify_user_id as modifyUserId, 
		t2.username as createUserName, t3.username as modifyUserName
		from t_scd_server_config t1 left join t_scd_user t2 on t1.create_user_id = t2.id
		left join t_scd_user t3 on t1.modify_user_id = t3.id
		where t1.id = #{id}
	</select>
	
	<select id="findExistsById" resultType="java.lang.Long" parameterType="java.lang.Long">
		select count(1) from t_scd_server_config where id = #{id}
	</select>
	
	<insert id="insert" parameterType="org.machairodus.mappers.domain.ServerConfig" useGeneratedKeys="true" keyProperty="id">
		insert into t_scd_server_config(name, address, username, passwd, create_time, create_user_id, modify_time, modify_user_id)
		values(#{name}, #{address}, #{username}, #{passwd}, #{createTime}, #{createUserId}, #{modifyTime}, #{modifyUserId})
	</insert>
	
	<update id="update" parameterType="org.machairodus.mappers.domain.ServerConfig">
		update t_scd_server_config set name = #{name}, address = #{address}, username = #{username}, passwd = #{passwd}, 
		modify_user_id = #{modifyUserId}, modify_time = #{modifyTime} where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.util.Map">
		delete from t_scd_server_config where id = #{id}
	</delete>
	
	<select id="findSimple" resultType="org.machairodus.mappers.domain.ServerConfig" parameterType="java.util.Map">
		select t1.id, t1.name, t1.address from t_scd_server_config t1 
		where 1 = 1
		<if test="param != null and param != ''">
			and (t1.name like '%${param}%' or t1.address like '%${param}%')
		</if>
		order by t1.name asc
		<if test="limit != null">limit <if test="offset != null">#{offset}, </if> #{limit}</if>
	</select>
	
	<select id="findSimpleTotal" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(1) from t_scd_server_config t1 
		where 1 = 1
		<if test="param != null and param != ''">
			and (t1.name like '%${param}%' or t1.address like '%${param}%')
		</if>
	</select>
</mapper>